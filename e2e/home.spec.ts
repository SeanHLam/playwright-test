import {test, expect} from '@playwright/test'

var homePage = 'http://localhost:3000/'
var about = 'http://localhost:3000/about'
var grades = 'http://localhost:3000/grades'

test.beforeAll(async () => {
    console.log('before tests');
})

test.afterAll(async () =>{
    console.log('After Tests')
})

test.describe('Head tag area', () => {
    test('Contains the head tag and its contents.',async ({page}) => {
        await page.goto(homePage);
        await expect(page).toHaveTitle('Example #1');

        const metaDescription = page.locator('meta[name="description"]');
        await expect(metaDescription).toHaveAttribute('content', 'Generated by create next app')

        const linkIcon = page.locator('link[rel="icon"]')
        await expect(linkIcon).toHaveAttribute('href', '/favicon.ico')
    })
})

test.describe('Main content', () =>{
    test('Should contain a heading weldome to my home page', async ({page}) =>{
        await page.goto(homePage);
        await expect(page.locator('h1')).toContainText('Welcome to my home page');
        
    })  
    
    test('Should contain a list to describe CRUD', async ({page}) =>{
        await page.goto(homePage);
        await expect(page.locator('ul > li')).toContainText(["Create","Read", "Update", "Delete"]);
        
    })    

})

test.describe('Linking to another page', () =>{ 
    
    test('Should contain a link to the about page', async ({page}) =>{
        await page.goto(homePage);
        await page.click('text=About Page');
        await expect(page).toHaveURL(about);
    })    
    
    test('Should contain a link to the grades page', async ({page}) =>{
        await page.goto(homePage);
        await page.click('text=Grades Page');
        await expect(page).toHaveURL(grades);
    })

})

test.describe('Button tests', () =>{ 
    test('This is the info component',async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('button')).toContainText("View all this info")
    })
 

})

test.describe('Footer tests', () =>{ 
    test('Should contain a footer on the home page',async ({page}) => {
        await page.goto(homePage);
        await expect(page.locator('footer')).toContainText("In Class Example #1")
    })
 

})

test.describe('Check about page navigates to home pagge tests', () =>{ 
    test('Should contain a footer on the home page',async ({page}) => {
        await page.goto(about);
        await page.click('text=Go Back');
        await expect(page).toHaveURL(homePage);
    })
 

})